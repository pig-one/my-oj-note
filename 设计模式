2019.5.12
UML类图：
    当一个类‘知道’另一个类时，关联。
    聚合：大雁和雁群。表示一种弱拥有关系，A对象可包含B对象，但B对象不是A对象的一部分。
    合成：鸟和它的翅膀，表示一种强的‘拥有关系’，体现了严格的部分与整体，部分与整体的生命周期一致。

1.简单工厂模式
    面向对象编程，曹操的诗，活字印刷，可维护，可扩展，可复用，灵活性。
    计算器：
        业务逻辑和界面逻辑分开，耦合度下降---------------封装
        把加减乘除写成运算类的子类------------------------------继承
        重写getResult()方法-----------------------------------多态
    简单工厂模式，即用一个单独的类来做一个创造实例的过程。根据输入的运算符号，工厂就实例化出合适的对象，然后通过多态，返回父类的方式得到计算结果。
    
    
2.策略模式
    面向对象编程，并不是类越多越好，类的划分是为了封装，分类的基础是抽象，具有相同属性和功能的对象的抽象集合就是类。
    商场收银软件：
        （----------------略）可以用简单工厂模式实现（现金收费工厂类CashFactorry，现金收费抽象类CashSuper，正常收费子类，打折收费子类，返利收费子类，客户端代码）
        策略模式和简单工厂模式实现：
            （CashContext,CashSuper,CashNormal,CashRebate,CashReturn,客户端代码），策略模式在CashContext中并不判断用哪个算法，但简单工厂模式需要。
            简单工厂模式需要让客户端认识两个类：现金收费工厂类CashFactorry，现金收费抽象类CashSuper
            但是策略模式与简单工厂结合，客户端只需要认识一个CashContext就可以，耦合度更低。
            
            
3.单一职责原则
    拍摄UFO,手机拍不清楚，有相机就好了。
    单一职责原则（SRP）:准确解释为：就一个类而言，应当仅有一个引起它变化的原因。
    方块游戏的设计，界面和逻辑分离，，如何确定一个类有过多的职责需要分离呢？？？
        答案是如果你可以想到多余一个的动机去改变一个类，那么这个类就有多于一个的职责，此时应该考虑职责分离！
        
        
4.开放--封闭原则
    一国两制，考研与求职
    开放--封闭原则：是说软件实体（类、模块、函数等）应该可以拓展，但是不可以修改。
